buildscript {
    repositories {
        // The plugin is currently only available via the Jenkins
        // Maven repository, but has dependencies in Maven Central.
        mavenCentral()
        maven {
            url 'http://repo.jenkins-ci.org/releases/'
        }
    }
    dependencies {
        classpath 'org.jenkins-ci.tools:gradle-jpi-plugin:0.22.0'
    }
}

apply plugin: 'java'
apply plugin: 'org.jenkins-ci.jpi'

group = 'org.jenkins-ci.plugins'
version = '1.0-DaniloLiebel'
description = 'rancher plugin'

repositories {
    maven {
        url "http://bits.netbeans.org/maven2/"
    }
    maven {
        url "http://repo.jenkins-ci.org/releases/"
    }
    jcenter()
    mavenCentral()
}

dependencies {
    compile 'org.jenkins-ci.main:jenkins-core:2.11'
    jenkinsPlugins 'org.jenkins-ci.plugins:credentials:2.1.13@jar'
    optionalJenkinsPlugins 'org.jenkins-ci.plugins:plain-credentials:1.4@jar'
    compile 'commons-codec:commons-codec:1.10'
    compile 'com.fasterxml.jackson.core:jackson-core:2.8.1'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.8.1'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.8.1'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.10.19'
}

jenkinsPlugin {
    // version of Jenkins core this plugin depends on, must be 1.420 or later
    coreVersion = '2.11'

    // ID of the plugin, defaults to the project name without trailing '-plugin'
    shortName = 'rancher'

    // human-readable name of plugin
    displayName = 'Rancher Plugin'

    // URL for plugin on Jenkins wiki or elsewhere
    url = 'https://wiki.jenkins.io/display/JENKINS/Rancher+Plugin'

    // plugin URL on GitHub, optional
    gitHubUrl = 'https://github.com/jenkinsci/rancher-plugin.git'

    // use the plugin class loader before the core class loader, defaults to false
    pluginFirstClassLoader = true

    // optional list of package prefixes that your plugin doesn't want to see from core
    maskClasses = 'groovy.grape org.apache.commons.codec'

    // optional version number from which this plugin release is configuration-compatible
    compatibleSinceVersion = '1.1.0'

    // set the directory from which the development server will run, defaults to 'work'
    workDir = file('/tmp/jenkins')

    // URL used to deploy the plugin, defaults to the value shown
    repoUrl = 'https://repo.jenkins-ci.org/releases'

    // URL used to deploy snapshots of the plugin, defaults to the value shown
    snapshotRepoUrl = 'https://repo.jenkins-ci.org/snapshots'

    // enable injection of additional tests for checking the syntax of Jelly and other things
    disabledTestInjection = true

    // the output directory for the localizer task relative to the project root, defaults to the value shown
    localizerOutputDir = "${project.buildDir}/generated-src/localizer"

    // disable configuration of Maven Central, the local Maven cache and the Jenkins Maven repository, defaults to true
    configureRepositories = false

    // skip configuration of publications and repositories for the Maven Publishing plugin, defaults to true
    configurePublishing = true

    // plugin file extension, either 'jpi' or 'hpi', defaults to 'hpi'
    fileExtension = 'hpi'

    // the developers section is optional, and corresponds to the POM developers section
    developers {
        developer {
            id 'daniloliebel'
            name '''daniloliebel'''
            email 'daniloliebel@gmail.com'
        }
    }
}
